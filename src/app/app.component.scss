@import "../styles.scss";

$logo-size: 200px; //loading page animation logo container width;

*,
*:before,
*:after {
  box-sizing: border-box;
}

nav {
  display: flex;
  position: relative;
  justify-content: space-between;
  align-items: center;
  border-bottom: solid black 1px;
  padding-top: 5px;
  padding-bottom: 5px;
}
#nav-logo {
  margin-left: 20px;
  width: 60px;
  height: 60px;
  object-fit: contain;
}

main {
  max-width: $max-page-width;
}

.name {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  font-size: 40px;
}

ul {
  display: flex;
  margin: 0;
  margin-right: 20px;
  padding: 0;

  li {
    list-style: none;
    padding: 20px;
  }

  a {
    text-decoration: none;
    color: inherit;
    font-size: 20px;
  }
}

main {
  margin: 0 auto;
  min-width: 400px;
}

#load-screen {
  display: none;
  position: absolute;
  align-content: center;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-color: lightgray;
}
#load-screen.active {
  display: block;
}

.logo {
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $logo-size;
  height: $logo-size;
  padding: 0;
  margin: 0;
}

.line {
  position: absolute;
  width: 0;
  height: 5px; /* Adjust the thickness of the line */
  background-color: darkcyan; /* Color of the line */
  transform-origin: left center; /* Set the transformation origin to the left */
}
.char-line {
  position: absolute;
  width: 0;
  height: 10px; /* Adjust the thickness of the line */
  background-color: darkcyan; /* Color of the line */
  transform-origin: left center; /* Set the transformation origin to the left */
}

.hexagon {
  animation: drawHexagon 1s forwards; /* Duration of the animation */
}

//The hexagon line numbering starts from the top right edge in clockwise fashion
//assuming being inscribed in a square of length $logo-size, each side of the hexagon
//is of length $logo-size/2
//the trailing rotation degree is tuned to hide away the line corners from sticking out
.hex-line1 {
  left: calc($logo-size / 2);
  top: 0;
  transform: rotate(30.7deg);
}
.hex-line2 {
  left: calc(0.933 * $logo-size);
  top: calc($logo-size / 4);
  transform: rotate(90.5deg);
}
.hex-line3 {
  left: calc(0.933 * $logo-size);
  top: calc($logo-size / 4 * 3);
  transform: rotate(150.5deg);
}
.hex-line4 {
  left: calc($logo-size / 2);
  top: $logo-size;
  transform: rotate(210.7deg);
}
.hex-line5 {
  left: calc(0.06699 * $logo-size);
  top: calc($logo-size / 4 * 3);
  transform: rotate(270.6deg);
}
.hex-line6 {
  left: calc(0.06699 * $logo-size);
  top: calc($logo-size / 4);
  transform: rotate(330.7deg);
}

@keyframes drawHexagon {
  0% {
    width: 0;
  }
  100% {
    width: calc($logo-size / 1.96);
  }
}

//values for character lines are arbitrary selected but still remain remains coherent
//under different $logo-size
//left stroke of A
.char-line1 {
  left: calc($logo-size / 4);
  top: calc($logo-size/1.3);
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
  transform: rotate(291.5deg);
  animation: drawAngleCharLine 0.5s forwards;
  animation-delay: 1s;
}

//right stroke of A
.char-line2 {
  left: calc($logo-size / 2);
  top: calc($logo-size / 10);
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  transform: rotate(67.5deg);
  animation: drawAngleCharLine 0.5s forwards;
  animation-delay: 1.45s;
}
@keyframes drawAngleCharLine {
  0% {
    width: 0;
  }
  100% {
    width: calc($logo-size / 1.4);
  }
}

.char-line3 {
  left: calc($logo-size / 2.7 + $logo-size/3.8);
  top: calc($logo-size / 2.2);
  transform: rotate(180deg);
  animation: drawHorCharLine 0.2s forwards;
  animation-delay: 2s;
}

@keyframes drawHorCharLine {
  0% {
    width: 0;
  }
  100% {
    width: calc($logo-size/3.8);
  }
}
