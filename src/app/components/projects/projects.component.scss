@import "../../../styles.scss";

.projects-section {
  display: flex;
  position: relative;
  gap: 20px;
  justify-content: center;
  padding: calc($small-spacing / 2) $small-spacing;
}

.filter-btn-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  height: 40px;
}

.filter-btn {
  text-align: center;
  cursor: pointer;
  &:hover {
    color: $on-hover-color;
  }
}
.mobile-filter {
  position: absolute;
  display: block;
  transform: translateX(-100%);
  background-color: rgb(236, 236, 236);
  top: 0;
  left: 0;
  z-index: 100;
  transition: all 0.5s;
  opacity: 0;
  width: 150px;
  height: 100vh;
  padding: 20px;

  &.open {
    transform: translateX(0);
    opacity: 1;
  }

  span {
    padding-bottom: 5px;
  }

  .selected-filter {
    display: flex;
    flex-direction: column;
    height: 50px;
  }

  .selected-filter-name {
    cursor: pointer;

    &:hover {
      color: $on-hover-color;
    }
  }

  li {
    list-style: none;
    padding-bottom: 5px;
    cursor: pointer;

    &:hover {
      color: $on-hover-color;
    }
  }

  li:not(.heading),
  .selected-filter-name {
    padding-left: 20px;
  }

  a {
    text-decoration: none;
    color: inherit;
    font-size: 20px;

    &:hover {
      color: $on-hover-color;
    }
  }
}

.desktop-filter {
  width: 150px;
  display: none;
  flex-direction: column;
  margin: 0;
  height: fit-content;

  span {
    padding-bottom: 5px;
  }

  .selected-filter {
    display: flex;
    flex-direction: column;
    height: 50px;
  }

  .selected-filter-name {
    cursor: pointer;

    &:hover {
      color: $on-hover-color;
    }
  }

  li {
    list-style: none;
    padding-bottom: 5px;
    cursor: pointer;

    &:hover {
      color: $on-hover-color;
    }
  }

  li:not(.heading),
  .selected-filter-name {
    margin-left: 20px;
  }
}

@media (min-width: 1024px) {
  .desktop-filter {
    display: flex;
  }
  .mobile-filter {
    display: none;
  }
  .filter-btn-section {
    display: none;
  }
}

.flex-column {
  display: flex;
  flex-direction: column;
  align-items: end;
  gap: 10px;
}
.flex-row {
  display: flex;
  flex-direction: row;
  gap: 10px;
}

.project-grid {
  display: grid;
  position: relative;
  grid-template-columns: 1fr;
  column-gap: 25px;
  align-items: center;
}

.grid-item {
  padding: 10px;
  margin-bottom: 25px;
  width: 220px;
  height: 430px;
  border: solid grey 1px;
  border-radius: 10px;

  &.hidden {
    display: none;
  }

  &:hover {
    transform: scale(1.02);
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
  }

  h1,
  p {
    text-align: center;
    margin: 10px 0;
    white-space: nowrap; /* Prevent text from wrapping */
    overflow: hidden; /* Hide overflowing text */
    text-overflow: ellipsis;
  }

  h1 {
    font-size: 25px;
  }
  .tag {
    display: inline-block;
    padding: 5px;
    font-size: 12px;
    background-color: bisque;
    border-radius: 10px;
    margin: 5px;
  }
}

.img-container {
  position: relative;
  width: 100%;
  aspect-ratio: 4 / 5;
  border-radius: 10px;
  overflow: hidden;
  cursor: pointer;

  img {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 120%;
    height: 110%;
    transform: translate(-50%, -50%);
    transition: transform 0.2s ease;

    //triggered by mouseover
    //I am shifting slightly less than having img edge against the edge of its container
    //due to border-radius issue
    &.shift-left {
      transform: translate(-42%, -50%);
    }
    &.shift-right {
      transform: translate(-58%, -50%);
    }
    &.shift-top {
      transform: translate(-50%, -46%);
    }
    &.shift-bottom {
      transform: translate(-50%, -54%);
    }
  }
}

@media (min-width: 600px) {
  .project-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  //reset margin in other media queries (must use n due to specifity)
  .grid-item:nth-child(n) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .grid-item:nth-child(2n) {
    margin-top: 50px;
    margin-bottom: -25px; //works with top margin to maintain row gap
  }
}

@media (min-width: 860px) {
  .project-grid {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid-item:nth-child(n) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .grid-item:nth-child(3n-1) {
    margin-top: 50px;
    margin-bottom: -25px;
  }
}

@media (min-width: 1200px) {
  .project-grid {
    grid-template-columns: repeat(4, 1fr);
  }
  .grid-item:nth-child(n) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .grid-item:nth-child(2n) {
    margin-top: 50px;
    margin-bottom: -25px;
  }
}
